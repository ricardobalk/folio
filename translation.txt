<!--ORIGINAL START-->
Ricardo Balk
Portfolio
2020
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Ricardo Balk
Portfolio
2020
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Hacktoberfest 2020
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Hacktoberfest 2020
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Jaarlijks in oktober vindt Hacktoberfest plaats, een online evenement waarbij mensen meehelpen met het maken en verbeteren van open-source software.

Het doel van Hacktoberfest is het bekend maken van open-source software en mensen de gelegenheid bieden zichzelf te ontplooien door samen met anderen ervaring op te doen met vele verschillende programmeertalen.

Door de opkomst van internet kan iedereen wereldwijd deelnemen aan Hacktoberfest, ongeacht achtergrond of ervaring.

Ook ik had me dit jaar aangemeld en gewerkt aan verschillende applicaties. Bovendien heb ik zelf ook een open-source locatie-tracker gebouwd, zodat anderen kunnen meedenken over de ontwikkeling van de app.

Er was verrassend veel interesse voor mijn relatief eenvoudige app. Dankzij Hacktoberfest is het in korte tijd uitgegroeid tot bruikbare applicatie, die ik in de toekomst verder uit ga werken.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Hacktoberfest is an online event that takes place each October. During this event, people from all over the world collaborate on open source software.

The goal of Hacktoberfest is improving the awareness of open source software, and give people the opportunity to explore and learn about the lare amount of programming languages available as of today.

Thanks to the advancement of the internet, anyone worldwide can join the event, regardless of their personal background or experience with open source software development.

I also participated this past year, and worked on various pieces of software. In addition to being a contributor, I have also set up my own project, an open source location tracker.

There was a surprising amount of interest in it, and with the help of Hacktoberfest, it quickly became a usable application, which I will be further developed on in the future.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Afbeelding: Een open-source locatie tracker die ik samen met anderen maakte in het kader van Hacktoberfest 2020. Back-end geschreven in Go, front-end in Vue 3 en TypeScript.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Image: An open source location tracker made during Hacktoberfest 2020. Back-end made with Go, front-end with Vue 3 and TypeScript.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Broncode: github.com/waarzitjenu
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Source code: github.com/waarzitjenu
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Eigen website • Web Design & Code
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Own website • Web Design & Code
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Nadat ik afstudeerde heb ik wat aan-dacht gegeven aan mijn eigen website.

Ik heb een nieuw ontwerp gemaakt voor mijn website en heb vervolgens de code geschreven om zo ervaring op te doen met Vue.

Vue is een Javascript-framework waarmee je dynamische onderdelen kunt toevoegen aan een website, waardoor je handige functionaliteiten kunt bouwen en aanbieden. 

Het grootste voordeel van Vue is dat het snel en overzichtelijk is. Het werkt met componenten waar door websites beter zijn te onderhouden. Vue sluit goed aan bij de Atomic Design-filosofie.
Met Atomic Design splits je ontwerpen op in kleinere onderdelen, het liefst zo klein mogelijk. Daaruit bouw je een systeem, in plaats van individuele pagina’s.

De achterliggende gedachte is dat als alle kleine onderdelen goed zijn uitgedacht, goed functioneren en onderling aansluiten bij elkaar, het geheel ook goed werkt. 

Gaat een onderdeel toch onverwachts stuk, dan blijft de rest (meestal) voldoende werken.

Problemen zijn makkelijker te vinden en de (programma)code is veel beter te onderhouden.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
After my graduation, I have put some effort in designing and developing my personal website.

I made a visual design and wrote the code to gain some experience with Vue, a modern web framework similar to Angular and React.

Vue is a modern web framework that allows to add dynamic parts to a website, to build and add functionalities.

The primary advantage of Vue is its simplicity, which makes it able to build components in a fast and straightforward way. The splitted components makes the maintainance easier, and also fits well to the Atomic Design Philosophy.
With Atomic Design, you split designs into smaller parts, preferably as small as possible. You basically design and build an entire system, instead of individual pages.

The idea is that if all small parts are well-designed, coded and combined in the right way, the whole system will work well.

If a part fails unexpectedly, the rest will usually continue to work sufficiently.

In a nutshell, Atomic Design increases productivity on the long run, makes problems easier to spot and lowers maintainance costs.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Website: ricardobalk.nl
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Website: ricardobalk.nl
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Broncode: github.com/ricardobalk/www
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Source code: github.com/ricardobalk/www
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Belangrijke skills bij dit project
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Important project skills
<!--TRANSLATION END-->
<!--ORIGINAL START-->
HTML/CSS
<!--ORIGINAL END-->
<!--TRANSLATION START-->
HTML/CSS
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Versiebeheer
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Version control
<!--TRANSLATION END-->
<!--ORIGINAL START-->
TypeScript
<!--ORIGINAL END-->
<!--TRANSLATION START-->
TypeScript
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Grafisch ontwerp
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Visual Design
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Gebruikte technieken
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Applied techniques
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Zurb Foundation
Webpack
VuePress
Vue
Node
Babel (ES6)
TypeScript
Prerendering
Git
Docker*
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Zurb Foundation
Webpack
VuePress
Vue
Node
Babel (ES6)
TypeScript
Prerendering
Git
Docker*
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Vormkracht10 • Usability & Design
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Vormkracht10 • Usability & Design
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Vormkracht10 is een webdesignbureau in Nijmegen die websites en apps maakt voor de zakelijke markt.

In het kader van een afstudeeropdracht heb ik voor dit bedrijf onderzoek verricht naar de gebruiksvriendlijkheid van een intern gebouwd CMS.

Het CMS heeft de naam ‘Slim’ en stelt klanten van het bedrijf in staat om hun website of webapplicatie op een
zelfstandige wijze te beheren.

Door middel van diverse interviews met klanten en de afname van usabilitytests is het systeem onderzocht op gebruiksvriendelijkheid.

Op basis van de resultaten uit de onderzoeken zijn er ontwerpvoorstellen gemaakt die Vormkracht10 kan gebruiken om de gebruiksvriendelijkheid van Slim te verbeteren en de gebruikers beter tegemoet te komen.

Van enkele ontwerpvoorstellen zijn er prototypes gemaakt die opnieuw getest zijn met een selectie klanten
om het ontwerp te verbeteren. Dit is gedaan aan de hand van ‘Design Thinking’.

Een van de interessante ontwerpvoorstellen was een dashboard waaruit (B2B-)gebruikers in één oogopslag de situatie van hun bedrijfswebsite kunnen zien.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Vormkracht10 is a web design agency in Nijmegen, Netherlands that builds websites and apps for the corporate market.

As part of a graduation assignment, I conducted research for this company into the user experience of their own content management system (CMS).

The system is called ‘Slim’ ('Clever' in Dutch) and allows the customers to maintain their website or web application
in an independent way.

Door middel van diverse interviews met klanten en de afname van usabilitytests is het systeem onderzocht op gebruiksvriendelijkheid.

Op basis van de resultaten uit de onderzoeken zijn er ontwerpvoorstellen gemaakt die Vormkracht10 kan gebruiken om de gebruiksvriendelijkheid van Slim te verbeteren en de gebruikers beter tegemoet te komen.

Each design has been tested twice for improving the end results
of the final designs. This is according to the ‘Design Thinking’ method.

One of the more interesting design proposals was a dashboard that allows business owners to see the status of their corporate website.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
De fasen van Design Thinking.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Phases of Design Thinking.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Belangrijke skills bij dit project
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Important project skills
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Communiceren
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Communication
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Onderzoeken
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Research
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Planmatig werken
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Task Planning
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Ontwerpen
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Designing
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Gebruikte technieken
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Applied techniques
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Zurb Foundation
Webpack
VuePress
Vue
Node
Babel (ES6)
TypeScript
Prerendering
Git
Docker*
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Zurb Foundation
Webpack
VuePress
Vue
Node
Babel (ES6)
TypeScript
Prerendering
Git
Docker*
<!--TRANSLATION END-->
<!--ORIGINAL START-->
ELDA • Bedrijfsvideo
<!--ORIGINAL END-->
<!--TRANSLATION START-->
ELDA • Business Movie
<!--TRANSLATION END-->
<!--ORIGINAL START-->
ELDA is een bedrijf dat al jaren actief is in de geitensector. Diensten die ELDA aanbiedt zijn Management Services voor de geitenhouderij, identificatie, koppelingen, melkonderzoek en aanvullende dienstverlening.

Een van de producten waar men aan kan denken is een online interface waarin de boer(in), verzorger of een dierenarts informatie kan opvragen over de voeding en gezondheid van een specifiek dier.

Onlangs is dit bedrijf overgenomen als dochter onderneming van RUMA-VSM. Het bedrijf had nog geen bedrijfsvideo die uitleg gaf over de diensten, dus ben ik gevraagd om een bedrijfsvideo te maken.

De bedrijfsvideo diende als inleiding op de presentatie tijdens de officiële opening en wordt in de toekomst ingezet als online video voor mensen die meer willen weten over het bedrijf.

Video: https://vimeo.com/301791287
<!--ORIGINAL END-->
<!--TRANSLATION START-->
ELDA is a business that has been a big player in the Dutch veterinary sector for years. Services that ELDA offers are Management Services for goat farmers, animal identification, gene pool matching, milk research and additional veterinary services.

One of ELDA's products that can be thought of is an online interface in which the farmer, carer or a veterinarian can use to gain insights into the health and nutritional information for one of their animals.

ELDA recently became a subsidiary of RUMA-VSM. They company did not have a corporate video yet to explain the offered services, so they asked me to make a business movie for them.

The movie has been shown during the 'official opening', and now serves as an online video for newcomers who want to know more about the company.

Video: https://vimeo.com/301791287
<!--TRANSLATION END-->
<!--ORIGINAL START-->
ProtonMail & ProtonVPN • Proeflezen
<!--ORIGINAL END-->
<!--TRANSLATION START-->
ProtonMail & ProtonVPN • Translations
<!--TRANSLATION END-->
<!--ORIGINAL START-->
ProtonMail is een e-maildienst die veilige, eenvoudig bruikbare e-mailaccounts aanbiedt die voorzien zijn van de allerlaatste technieken op het gebied van beveiliging en versleuteling.

Om de app voor iedereen beschikbaar te maken en de bruikbaarheid te verbeteren onder de mensen die minder goed Engels begrijpen was het noodzakelijk om de app te vertalen naar andere talen.

Voor de Nederlandse taal heb ik het voortouw in handen genomen en heb samen met een online team van Nederlands-sprekende personen de ProtonMail-app beschikbaar gemaakt in het Nederlands.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
ProtonMail is an email service that offers secure, easy-to-use email accounts equipped with the latest security and encryption technologies available.

In order to make the app available to everyone and to improve its usability among their Dutch userbase, I helped translating the app from English to Dutch.

I collaborated with an online team of other Dutch-speaking people, to make the ProtonMail and ProtonVPN apps available in Dutch.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
CrowdIn is de webapplicatie die ProtonMail gebruikt voor het vertalen van de teksten.

Je kunt CrowdIn het best beschrijven als een Agile vertaalprogramma waarin meerdere personen op een gestructureerde manier vertalingen kunnen indienen, beoordelen en herzien.

Projectmanagers, vertalers en proeflezers kunnen onderling communiceren over vertalingen en de voortgang is makkelijk te zien.

Het vertalen van ProtonMail was een succes en inmiddels ben ik ook gevraagd als proeflezer van ProtonVPN, een andere app die door dit bedrijf gemaakt is.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
CrowdIn is the webapplication ProtonMail uses for translating source strings.

One could describe CrowdIn as an agile, online translation management platform for collaborators and proofreaders, working together on a piece of text in a stuctured way. Translations can be added, reviewed and improved if necessary.

Translators and proofreaders can communicate about the translations (i.e. spelling and grammar choices) via the webinterface, and project managers can keep an eye on the progress.

I certainly enjoyed translating ProtonMail, and at this moment I'm also translating ProtonVPN, another application made by this company.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Red Blue Yellow • Unity Game
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Red Blue Yellow • Unity Game
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Red Blue Yellow is een arcade-achtige game waarbij je door middel van kleuren mengen een zo hoog mogelijke score probeert te halen.

De game is binnen 6 weken gerealiseerd door 4 studenten in Unity, een programma waarin men games kan bouwen.

De druk was erg hoog omdat wij geen ervaring hadden met de programmeertaal C#, weinig tijd hadden om deze taal eigen te maken én een werkende game op te leveren.

Ondanks de omstandigheden weerhield het er ons niet van om er vol voor te gaan en deze toffe game te realiseren.

Ik was verantwoordelijk voor de code van de random generation, die zorgt dat enemies op willekeurige plaatsen verschijnen en de spelbesturing.

Als kers op de taart heb ik een zelfgebouwde gamecontroller gemaakt.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Red Blue Yellow is an arcade-like game where players are required to obtain the highest possible score by mixing the correct colours.

This game has been build in just 6 weeks by 4 students from the HAN University of Applied Sciences.

It was a bit of a pressure-cooker because we didn't have any experience with the programming language C#, we had a very limited amount of time to learn this new language and even less time to build a working version of the game.

Despite the circumstances, we have put a lot of effort into the realisation, resulting in a nice game that's fun to play.

My personal responsibilities of this project were the random number generator, that regulates the placement of player enemies, and the user input handling i.e. the keyboard-mouse input.

I have also built a hardware gamecontroller for the game that uses an Arduino.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
De speler moet door middel van toetscombinaties de juiste kleur mengen en scoren.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
The player has to combine the right colours in order to win.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Drink'in • Regie Animatie & Sound
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Drink'in • Motion & Sound Director
<!--TRANSLATION END-->
<!--ORIGINAL START-->
In 2015 veranderde de wet omtrent alcoholgebruik onder jongeren. Dit hield in dat de minimumleeftijd voor het legaal mogen consumeren van alcohol veranderde van 16 naar 18 jaar.

Drink’in ging over deze verandering. In deze live talkshow werd aandacht besteed aan diverse aspecten van deze nieuwe wet, die door motion graphics (animaties) vertellenderwijs ingeleid werden door een professionele presentatrice.

Het project had een omvang van ongeveer 20 personen (personeel en derden meegerekend)

Mijn verantwoordelijkheden tijdens dit project waren onder andere het regisseren van een van de motion graphics (“probleemstelling”) en het regelen van de audio tijdens de uitzending.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
The Dutch legal drinking age increased from 16 to 18 years old back in 2015. This means that the Dutch youth could only legally buy, possess and consume alcoholic drinks if they're 18 years old, or older.

Drink’in is about this change in law. In this live online broadcast, attention was paid to various aspects of this changed law. Motion graphics were used to support the presenter along her story.

The project involved approximately 20 people (including staff and third parties)

My personal responibilities during this project were directing and helping with one of the motion graphics (“probleemstelling” - “problem definition”) and regulating the audio during the broadcast.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Sound Artist & Engineer
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Sound Artist & Engineer
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Tijdens The Mudskipper Family heb ik meegewerkt aan een spel dat gaat over het leven op Curaçao.

Een familie Mudskippers woont op Curaçao. Op een dag wordt de kleinste van de familie, Eva, plots meegenomen door een beruchte vogel die op het eiland woont: de Wara-Wara! 

De familie schrikt hiervan en wil dat Eva snel terugkomt. Daarom staan zij voor de uitdaging om op zoek te gaan naar Eva, en haar terug te brengen!

De Wara-Wara vogel leeft in het westen van Curaçao. Om daar te kunnen komen moeten de Mudskippers nat blijven, zij hebben namelijk water nodig om te overleven.

Ieder character in de game heeft unieke eigenschappen waardoor het aan de speler is welk character het best geschikt is om Eva te vinden.

De game had een projectomvang van ongeveer 40 personen, onderverdeeld in 5 subteams:

Level - Character - Art - Sound - Programming.

Level: Verantwoordelijk voor de gamescène en de storyline.

Character: Verantwoordelijk voor de speelbare en niet-speelbare karakters in het spel.

Art: Verantwoordelijk voor alle props (3D-modellen) en vormgeving in de scène.

Sound: Verantwoordelijk voor alle geluiden in en bij de game.

Programming: Verantwoordelijk voor de gamelogica, het renderen en bundelen.

Ik zat in het Sound-team, waarbij mijn focus lag bij het opnemen van
zogenoemde foley sounds. Foley sounds zijn omgevings-, en effectgeluiden die nodig zijn ter ondersteuning van de game.

Hierbij is bijvoorbeeld te denken aan een plons zodra een van de characters in het water springt. Omgevingsgeluiden zoals wind en geritsel van bladeren zijn ook foley sounds.

Ieder geluidje dat te horen is in The Mudskipper Family is volledig zelf opgenomen in de omgeving van Arnhem-Nijmegen. Daarna zijn ze stuk voor stuk bewerkt en beoordeeld.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
I've been a Sound Engineer and Foley Sound Artist for The Mudskipper Family, a game about a family of fishes living on the island of Curaçao.

A family of Mudskipper fishes lives on Curaçao. One day, the smallest member of the family, Eve, is suddenly abducted by a notorious bird living on the island: the Wara-Wara bird!

The whole family is astonished by it and wants to bring Eve back. The Mudskippers are need to look for her on the island of Curaçao in order to make the family complete again.

The Wara-Wara bird lives on the west coast of Curaçao. The Mudskippers need to stay hydrated in order to stay alive and have a limited time window to find Eve.

Each character has unique properties that provides different advantages. During the game, the player needs to decide which 'Mudskipper' is the best fit for each situation.

About 40 people have collaborated on this game. The project was split into 5 sub-teams:

Level - Character - Art - Sound - Programming.

Level: Responsible for the storyline and game play.

Character: Responsible for the playable and non-playable characters, including animations.

Art: Responsible for all props and additional object within the game's scene.

Sound: Responsible for the voice-over, music and sound effects.

Programming: Responsible for the game's logic, plus the rendering, bundling and deployment of the game.

I was part of this Sound Team. I primarily focused on the recording of
foley sound effects. Foley sound effects are environmental and action sound effects supporting the game during gameplay.

For example, when one of the character jumps in water, there needs to be a sound effect supporting this action. Environmental sounds like wind and rustling tree leaves are foley sound effects as well.

Each sound of The Mudskipper Family has been designed, recorded and edited and reviewed, in the area of Arnhem-Nijmegen. After this, they have been added to the game.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Raytormedia • Livestream
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Raytormedia • Livestream
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Raytormedia helpt bedrijven visueel en vertellenderwijs te communiceren door middel van illustraties, infographics en uitleganimaties.

Om klanten inzicht te geven in de diverse taken die behoren tot de processen zijn er livestreams gehouden.
Tijdens de livestreams werd onder andere uitgelegd hoe logo’s, personages en animaties gemaakt worden.

Raytormedia heeft mij gevraagd om de techniek van de livestream te verzorgen. Dit hield in dat ik de benodigde apperatuur regelde, servers huurde & instelde en er zorg voor droeg dat we daadwerkelijk live konden gaan.

Om een hoge kwaliteit beeld te garanderen is er gebruik gemaakt van een Canon 5D Mark III, externe capture-card en een extra computer die volledig toegewijd was aan het verwerken van het beeld.

De verwerkende computer stuurde de output naar een server in Amsterdam, vanaf daar werd het opnieuw verwerkt en gelijktijdig doorgestuurd naar verschillende platforms. Dit heet multiplexing.

Dankzij de multiplexing zonden we onze stream tegelijkertijd uit op YouTube, Twitch en Facebook, zodat ons bereik zo groot mogelijk was.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Raytormedia helps companies to communicate visually through the use of illustrations, infographics and animations (motion graphics).

To give customers insights into what's happening "inside the company", a live stream has been broadcasted.
The live stream explained people how logos, characters and animations are made.

Raytormedia asked me to do the technical set-up for the livestream. This meant that I arranged the required equipment, rented & set up servers and made sure that we could go live.

To guarantee a high quality broadcast, I used a Canon 5D Mark III, external capture card and an extra computer that was fully dedicated to processing the resulting video feed, before sending it to our 'multiplexer'.

Our multiplexing server resided in Amsterdam, from there it was reprocessed and forwarded to different platforms simultaneously.

Thanks to the simultaneous streams on YouTube, Twitch and Facebook, our reach was as high as possible.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Beelden
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Video feed
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Mixer
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Mixer
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Multiplexer
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Multiplexer
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Live
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Live
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Fotografie
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Photography
<!--TRANSLATION END-->
<!--TRANSLATION START-->
In my spare time, I like to take photographs. I usually go out for a walk while carrying my DSLR camera (Canon 5D Mark III) and try to capture the best moments.

In my spare time, I like to take photographs. I usually go out for a walk while carrying my DSLR camera (Canon 5D Mark III) and try to capture the best moments.

I also do it for relaxation, because I love being outside for a walk, somewhere in a forest, a random city or elsewhere.

By not being sticked to my computer screen all day, I can defer my thoughts for a while, providing room for creative ideas which I can use the next day.

I have published a photography collection on Unsplash.

Photos I have put on Unsplashed can be used for free, without conditions. The picture of the deer can also be found on Unsplash.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
unsplash.com/ricardobalk • instagram.com/ricardos.photography
<!--ORIGINAL END-->
<!--TRANSLATION START-->
unsplash.com/ricardobalk • instagram.com/ricardos.photography
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Illustraties
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Illustrations
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Ik maak zo af en toe illustraties in Adobe Illustrator, bijvoorbeeld om een verhaal te vertellen of iets toe te lichten.

Daarnaast heb ik in het verleden ook illustraties gemaakt ten behoeve van storyboards voor motion graphics.

Hieronder zijn enkele van mijn illustraties te zien. Dillustraties zijn van een storyboard over de bisschop Ferdinand Hamer, een bijzondere missiepioneer die op jonge leeftijd de wereld al rondreisde om zijn idealen te vertegenwoordigen. De bisschop is tijdens een van zijn vele reizen op brute wijze vermoord. Om hem te herdenken is er een standbeeld opgericht dat tot op heden in Nijmegen te vinden is — in de Bisschop Hamerstraat.

De onderste rij met illustraties zijn onderdeel van 'Storytelling', waarbij de opdracht was om een bestaande tekst te visualiseren. In dit geval "Jack and Jill".
<!--ORIGINAL END-->
<!--TRANSLATION START-->
I occasionally make illustrations in Adobe Illustrator (nowadays I'm using Inkscape), for telling a story or to explain something.

I have also made illustrations for motion graphic storyboards in the past.

Below are some of my illustrations. The illustrations is from a storyboard about the bishop Ferdinand Hamer, a special mission pioneer who traveled the world at a very young age. The Bishop was killed on one of his many trips, and in memory of him, a statue has been erected that can still be found in Nijmegen as of today - in the 'Bisschop Hamerstraat'.

The bottom row of illustrations are part of 'Storytelling', a university course, where the assignment was to visualize an existing nursery rhyme. In this case, "Jack and Jill".
<!--TRANSLATION END-->
<!--ORIGINAL START-->
3D Modelleren
<!--ORIGINAL END-->
<!--TRANSLATION START-->
3D Modelling
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Ik heb wat ervaring in het maken van 3D-modellen. Dit heb ik geleerd tijdens het GAME-semester op de HAN.

De modellen zijn gemaakt in Autodesk 3DsMax, een bekend programma voor het maken van 3D-modellen.

De opdracht tijdens het semester was om de 3D-modellen te maken met zo min mogelijk vlakjes, poly’s.

De reden hiervoor is dat in een game veel modellen tegelijkertijd ingeladen worden, minder poly’s per model betekent dus een snellere laadtijd en beter speelbare game.

Om de modellen minder vlak en meer natuurgetrouw weer te geven zijn er andere technieken toegepast, zoals bijvoorbeeld specular maps.

Dankzij specular maps krijgen delen van het model een bepaalde mate van glans en/of reflectie, afhankelijk van
de specular map.

Op de linker pagina is te zien dat er meerdere lichtbronnen het object verlichten, rechtsonder op deze pagina is het resultaat te zien.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
I have some experience in creating 3D models, which I learned during one of the courses at HAN University.

During that time, I used Autodesk 3DsMax, a well-known app for creating 3D models.

The primary condition during the semester was to make the 3D models with as few squares (poly’s) as possible.

There's a reason for that: in a game, many different 3D models are loaded in the scene, so using less poly's per model means a faster and better playable game.

In order to give the models a more realistic visual appearance, various techniques have been used, such as alpha maps and specular maps.

Alpha maps makes parts of the 3D model transparent, and specular maps add a certain amount of reflection and
gloss to the objects.

On the left page you can see that several light sources are illuminating the object, resulting in more depth, as can be seen on the right side.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
3D Modelleren • Geavanceerd
<!--ORIGINAL END-->
<!--TRANSLATION START-->
3D Modelleren • Geavanceerd
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Naast wat basis 3D-modellen heb ik ook ‘grotere’ 3D-modellen gemaakt.

Een van die modellen was een post-apocalyptische auto, gebaseerd op een moderne auto.

De auto is volledig gemaakt aan de hand van de ‘plane-modelling’ techniek. Bij deze techniek wordt aan de hand van een (digitale) mal een vlakke plaat uitgetrokken totdat er een 3D-model ontstaat.

Het voordeel is dat er wederom zo min mogelijk poly’s gebruikt zijn om het model te realiseren. Het nadeel is dat de UVW Unwrap soms in stukken breekt.

Om de modellen minder vlak en meer natuurgetrouw weer te geven zijn er andere technieken toegepast, zoals bijvoorbeeld specular maps.

Dankzij specular maps krijgen delen van het model een bepaalde mate van glans en/of reflectie, afhankelijk van de specular map.

Op de linker pagina is te zien dat er meerdere lichtbronnen het object verlichten, rechtsonder op deze pagina is het resultaat te zien.
<!--ORIGINAL END-->
<!--TRANSLATION START-->
In addition to some basic 3D Models, I have also created some more advanced ones.

One of the 3D models I have made, was a post-apocalyptic car, based on a modern car.

The 3D has been made with a technique called 'plane modelling'. This technique uses a sketch of the X, Y, and Z planes and a flat plane. The plane covers the sketches, in order to create a 3D model from it.

The main advantage of plane modelling is the limited amount of poly's needed in order to realise the 3D model. However, a common drawback is that the UVW unwrap can 'break into pieces', making it difficult to apply a texture to the model.

To make the model more realistic, some additional techniques have been used, like alpha maps and specular maps.

Alpha maps makes parts of the 3D model transparent, and specular maps add a certain amount of reflection and gloss to the objects.

On the left side, you can see that multiple light sources are being used to illuminaate the object. The result can be seen on the right side of the page.
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Titel • Categorie
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Title • Category
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Ik ben makelaar in koffi, en woon op de Lauriergracht No 37.

Het is mijn gewoonte niet, romans te schrijven, of zulke dingen, en het heeft dan ook lang geduurd, voor ik er toe overging een paar riem papier extra te bestellen, en het werk aan te vangen, dat gij, lieve lezer, zoâven in de hand hebt genomen, en dat ge lezen moet als ge makelaar in koffie zijt, of als ge wat anders zijt.

Niet alleen dat ik nooit iets schreef wat naar een roman geleek, maar ik houd er zelfs niet van, iets dergelijks te lezen, omdat ik een man van zaken ben.


Alles leugens! Zo gaat dan de opvoeding voort. Het nieuwe zusje is van de groenvrouw gekomen in een grote kool. 

Alle Hollanders zijn dapper en edelmoedig. De Romeinen waren blij dat de Batavieren hen lieten leven. De Bey van Tunis kreeg een koliek als hij het wapperen hoorde van de Nederlandse vlag. De hertog van Alva was een ondier.

De eb, in 1672 geloof ik, duurde wat langer dan gewoonlijk, expres om Nederland te beschermen.

Leugens! Nederland is Nederland gebleven, omdat onze oudelui goed op hun zaken pasten, en omdat ze het ware geloof hadden. Dàt is de zaak!
<!--ORIGINAL END-->
<!--TRANSLATION START-->
This is just placeholder text. Ik ben makelaar in koffi, en woon op de Lauriergracht No 37.

Het is mijn gewoonte niet, romans te schrijven, of zulke dingen, en het heeft dan ook lang geduurd, voor ik er toe overging een paar riem papier extra te bestellen, en het werk aan te vangen, dat gij, lieve lezer, zoâven in de hand hebt genomen, en dat ge lezen moet als ge makelaar in koffie zijt, of als ge wat anders zijt.

Niet alleen dat ik nooit iets schreef wat naar een roman geleek, maar ik houd er zelfs niet van, iets dergelijks te lezen, omdat ik een man van zaken ben.


Alles leugens! Zo gaat dan de opvoeding voort. Het nieuwe zusje is van de groenvrouw gekomen in een grote kool. 

Alle Hollanders zijn dapper en edelmoedig. De Romeinen waren blij dat de Batavieren hen lieten leven. De Bey van Tunis kreeg een koliek als hij het wapperen hoorde van de Nederlandse vlag. De hertog van Alva was een ondier.

De eb, in 1672 geloof ik, duurde wat langer dan gewoonlijk, expres om Nederland te beschermen.

Leugens! Nederland is Nederland gebleven, omdat onze oudelui goed op hun zaken pasten, en omdat ze het ware geloof hadden. Dàt is de zaak!
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Website: example.com
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Website: example.com
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Broncode: github.com/username/repo
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Source code: github.com/username/repo
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Belangrijke skills bij dit project
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Important project skills
<!--TRANSLATION END-->
<!--ORIGINAL START-->
HTML/CSS
<!--ORIGINAL END-->
<!--TRANSLATION START-->
HTML/CSS
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Versiebeheer
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Version control
<!--TRANSLATION END-->
<!--ORIGINAL START-->
TypeScript
<!--ORIGINAL END-->
<!--TRANSLATION START-->
TypeScript
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Grafisch ontwerp
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Visual Design
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Gebruikte technieken
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Applied techniques
<!--TRANSLATION END-->
<!--ORIGINAL START-->
Zurb Foundation
Webpack
VuePress
Vue
Node
Babel (ES6)
TypeScript
Prerendering
Git
Docker*
<!--ORIGINAL END-->
<!--TRANSLATION START-->
Zurb Foundation
Webpack
VuePress
Vue
Node
Babel (ES6)
TypeScript
Prerendering
Git
Docker*
<!--TRANSLATION END-->
